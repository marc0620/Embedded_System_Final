#include "mbed.h"
#include "arm_math.h"
#include "myDSPLib.h"
#include <cstdint>
#include <iostream>

/* This is an example usage of our library
First you have to follow the instructions on the course slides about CMSIS,
then include "myDSPLib.h" in your main file.
Now you are ready to go.
*/


// define by user
#define RECEIVE_CHUNKSIZE 512
#define PROCESS_BLOCKSIZE 256


q7_t testInput1[RECEIVE_CHUNKSIZE] = {
    -111 ,   -103 ,  -95 ,   -85 ,   -76 ,   -67 ,   -59 ,   -53 ,
    -48 ,    -45 ,   -43 ,   -43 ,   -45 ,   -48 ,   -51 ,   -55 ,
    -59 ,    -63 ,   -65 ,   -66 ,   -66 ,   -63 ,   -59 ,   -53 ,
    -45 ,    -35 ,   -24 ,   -12 ,   0 ,     12 ,    24 ,    35 ,
    45 ,     53 ,    59 ,    63 ,    66 ,    66 ,    65 ,    63 ,
    59 ,     55 ,    51 ,    48 ,    45 ,    43 ,    43 ,    45 ,
    48 ,     53 ,    59 ,    67 ,    76 ,    85 ,    95 ,    103 ,
    111 ,    118 ,   123 ,   126 ,   127 ,   126 ,   123 ,   118 ,
    111 ,    103 ,   95 ,    85 ,    76 ,    67 ,    59 ,    53 ,
    48 ,     45 ,    43 ,    43 ,    45 ,    48 ,    51 ,    55 ,
    59 ,     63 ,    65 ,    66 ,    66 ,    63 ,    59 ,    53 ,
    45 ,     35 ,    24 ,    12 ,    0 ,     -12 ,   -24 ,   -35 ,
    -45 ,    -53 ,   -59 ,   -63 ,   -66 ,   -66 ,   -65 ,   -63 ,
    -59 ,    -55 ,   -51 ,   -48 ,   -45 ,   -43 ,   -43 ,   -45 ,
    -48 ,    -53 ,   -59 ,   -67 ,   -76 ,   -85 ,   -95 ,   -103 ,
    -111 ,   -118 ,  -123 ,  -126 ,  -128 ,  -126 ,  -123 ,  -118 ,
    -111 ,   -103 ,  -95 ,   -85 ,   -76 ,   -67 ,   -59 ,   -53 ,
    -48 ,    -45 ,   -43 ,   -43 ,   -45 ,   -48 ,   -51 ,   -55 ,
    -59 ,    -63 ,   -65 ,   -66 ,   -66 ,   -63 ,   -59 ,   -53 ,
    -45 ,    -35 ,   -24 ,   -12 ,   0 ,     12 ,    24 ,    35 ,
    45 ,     53 ,    59 ,    63 ,    66 ,    66 ,    65 ,    63 ,
    59 ,     55 ,    51 ,    48 ,    45 ,    43 ,    43 ,    45 ,
    48 ,     53 ,    59 ,    67 ,    76 ,    85 ,    95 ,    103 ,
    111 ,    118 ,   123 ,   126 ,   127 ,   126 ,   123 ,   118 ,
    111 ,    103 ,   95 ,    85 ,    76 ,    67 ,    59 ,    53 ,
    48 ,     45 ,    43 ,    43 ,    45 ,    48 ,    51 ,    55 ,
    59 ,     63 ,    65 ,    66 ,    66 ,    63 ,    59 ,    53 ,
    45 ,     35 ,    24 ,    12 ,    0 ,     -12 ,   -24 ,   -35 ,
    -45 ,    -53 ,   -59 ,   -63 ,   -66 ,   -66 ,   -65 ,   -63 ,
    -59 ,    -55 ,   -51 ,   -48 ,   -45 ,   -43 ,   -43 ,   -45 ,
    -48 ,    -53 ,   -59 ,   -67 ,   -76 ,   -85 ,   -95 ,   -103 ,
    -111 ,   -118 ,  -123 ,  -126 ,  -128 ,  -126 ,  -123 ,  -118 ,
    -111 ,   -103 ,  -95 ,   -85 ,   -76 ,   -67 ,   -59 ,   -53 ,
    -48 ,    -45 ,   -43 ,   -43 ,   -45 ,   -48 ,   -51 ,   -55 ,
    -59 ,    -63 ,   -65 ,   -66 ,   -66 ,   -63 ,   -59 ,   -53 ,
    -45 ,    -35 ,   -24 ,   -12 ,   0 ,     12 ,    24 ,    35 ,
    45 ,     53 ,    59 ,    63 ,    66 ,    66 ,    65 ,    63 ,
    59 ,     55 ,    51 ,    48 ,    45 ,    43 ,    43 ,    45 ,
    48 ,     53 ,    59 ,    67 ,    76 ,    85 ,    95 ,    103 ,
    111 ,    118 ,   123 ,   126 ,   127 ,   126 ,   123 ,   118 ,
    111 ,    103 ,   95 ,    85 ,    76 ,    67 ,    59 ,    53 ,
    48 ,     45 ,    43 ,    43 ,    45 ,    48 ,    51 ,    55 ,
    59 ,     63 ,    65 ,    66 ,    66 ,    63 ,    59 ,    53 ,
    45 ,     35 ,    24 ,    12 ,    0 ,     -12 ,   -24 ,   -35 ,
    -45 ,    -53 ,   -59 ,   -63 ,   -66 ,   -66 ,   -65 ,   -63 ,
    -59 ,    -55 ,   -51 ,   -48 ,   -45 ,   -43 ,   -43 ,   -45 ,
    -48 ,    -53 ,   -59 ,   -67 ,   -76 ,   -85 ,   -95 ,   -103 ,
    -111 ,   -118 ,  -123 ,  -126 ,  -128 ,  -126 ,  -123 ,  -118 ,
    -111 ,   -103 ,  -95 ,   -85 ,   -76 ,   -67 ,   -59 ,   -53 ,
    -48 ,    -45 ,   -43 ,   -43 ,   -45 ,   -48 ,   -51 ,   -55 ,
    -59 ,    -63 ,   -65 ,   -66 ,   -66 ,   -63 ,   -59 ,   -53 ,
    -45 ,    -35 ,   -24 ,   -12 ,   0 ,     12 ,    24 ,    35 ,
    45 ,     53 ,    59 ,    63 ,    66 ,    66 ,    65 ,    63 ,
    59 ,     55 ,    51 ,    48 ,    45 ,    43 ,    43 ,    45 ,
    48 ,     53 ,    59 ,    67 ,    76 ,    85 ,    95 ,    103 ,
    111 ,    118 ,   123 ,   126 ,   127 ,   126 ,   123 ,   118 ,
    111 ,    103 ,   95 ,    85 ,    76 ,    67 ,    59 ,    53 ,
    48 ,     45 ,    43 ,    43 ,    45 ,    48 ,    51 ,    55 ,
    59 ,     63 ,    65 ,    66 ,    66 ,    63 ,    59 ,    53 ,
    45 ,     35 ,    24 ,    12 ,    0 ,     -12 ,   -24 ,   -35 ,
    -45 ,    -53 ,   -59 ,   -63 ,   -66 ,   -66 ,   -65 ,   -63 ,
    -59 ,    -55 ,   -51 ,   -48 ,   -45 ,   -43 ,   -43 ,   -45 ,
    -48 ,    -53 ,   -59 ,   -67 ,   -76 ,   -85 ,   -95 ,   -103 ,
    -111 ,   -118 ,  -123 ,  -126 ,  -128 ,  -126 ,  -123 ,  -118 ,
};




Timer t;


int main(){

    
    q7_t testOutput1[RECEIVE_CHUNKSIZE];
    
    
    t.start();
    
    Wrapper_FIR(testInput1, testOutput1, RECEIVE_CHUNKSIZE, PROCESS_BLOCKSIZE, 1);
    Wrapper_KeyShift(testInput1, testOutput1, RECEIVE_CHUNKSIZE, 0);
    
    t.stop();
    printf("The time taken was %f seconds\n", t.read());

    // for(int i = 0; i < RECEIVE_CHUNKSIZE; i++) testOutput1[i] = (testInput1[i]);

    // for(int i = 0; i < RECEIVE_CHUNKSIZE; i=i+8) printf("%d, %d, %d, %d, %d, %d, %d, %d ...\n", testOutput1[i], testOutput1[i+1], testOutput1[i+2], testOutput1[i+3], testOutput1[i+4], testOutput1[i+5], testOutput1[i+6], testOutput1[i+7]);
    


    while(1){

    }

}